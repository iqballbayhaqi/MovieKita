{"version":3,"sources":["serviceWorker.js","Components/slider.jsx","Components/CardPost.jsx","Home.jsx","Container/Posting.jsx","Container/Search.jsx","Components/header.jsx","index.js"],"names":["Boolean","window","location","hostname","match","sliders","id","src","alt","slider","className","dots","autoplay","infinite","slidesToShow","slidesToScroll","adaptiveHeight","map","key","Component","CardPost","to","this","props","image","title","year","type","React","styled","p","Button","button","home","state","movies","loading","error","page","totalresult","fetchApi","fetch","then","res","json","setState","concat","Search","totalResults","Fragment","movie","imdbID","Poster","Title","Year","Type","length","onClick","h1","Head","div","Container","TextContainer","Desc","Posting","text","Response","Error","params","Released","Runtime","Genre","Director","Writer","Actors","Language","Country","DVD","Production","BoxOffice","Plot","Text","keyword","prevProps","StyledHeader","BrandNname","ContainerSearch","StyledInput","input","Icon","i","StyledButton","StyledLink","Link","Header","onSearch","history","push","placeholder","onInput","event","target","value","onKeyPress","withRouter","ForMargin","ReactDOM","render","path","exact","component","Home","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5b34fe5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport './slider.css';\r\n\r\nconst sliders = [\r\n    {id: 1, src: \"/images/slide1.jpg\", alt: \"Credit to Joshua Earle on Unsplash\"},\r\n    {id: 2, src: \"/images/slide2.jpg\", alt: \"Credit to Alisa Anton on Unsplash\"},\r\n    {id: 3, src: \"/images/slide3.jpg\", alt: \"Credit to Joshua Earle on Unsplash\"},\r\n    {id: 4, src: \"/images/slide4.jpg\", alt: \"Credit to Joshua Earle on Unsplash\"},\r\n    {id: 5, src: \"/images/slide5.jpg\", alt: \"Credit to Joshua Earle on Unsplash\"},\r\n    {id: 6, src: \"/images/slide6.jpg\", alt: \"Credit to Joshua Earle on Unsplash\"}\r\n]\r\n\r\n\r\nclass slider extends Component {\r\n    render() {\r\n        const settings = {\r\n            dots: true,\r\n            autoplay: true,\r\n            infinite: true,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            adaptiveHeight: true,\r\n        };\r\n        \r\n    return (\r\n        <div className=\"container-slider\">\r\n          <Slider {...settings} >\r\n              {sliders.map((slider) => (\r\n                <div key={slider.id}><img src={slider.src} alt={slider.alt}/></div>\r\n              ))}\r\n          </Slider>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default slider;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './CardPost.css';\r\n\r\nclass CardPost extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"sub-container\">\r\n                    <div>\r\n                        <Link to={`/posting/${this.props.id}`}>\r\n                        <img src={this.props.image} className=\"poster\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"text\">\r\n                        <h1>{this.props.title}</h1>\r\n                        <p>Tahun : {this.props.year}</p>\r\n                        <p>Type : {this.props.type}</p>           \r\n                    </div> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardPost;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Slider from './Components/slider';\r\nimport CardPost from './Components/CardPost';\r\n\r\nconst Text = styled.p`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: #20232a;\r\n`;\r\nconst Button = styled.button`\r\n    background: #62dafb;\r\n    border: none;\r\n    font-weight: bold;\r\n    color: #20232a;\r\n    width: 100%;\r\n    padding: 0;\r\n    height: 25px;\r\n`;\r\n\r\nclass home extends React.Component {\r\n    state = {\r\n            movies: [],\r\n            loading: false,\r\n            error: null,\r\n            page: 1,\r\n            totalresult: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchApi()\r\n    }\r\n\r\n    fetchApi = (page = 1 ) => {\r\n        fetch(`http://www.omdbapi.com/?s=man&y=2019&type=movie&page=${page}&apikey=97f679b2`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState({movies: this.state.movies.concat(res.Search), error: null,totalresult: res.totalResults}))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Slider />\r\n                {this.state.movies.map((movie) => (\r\n                    <CardPost \r\n                    key={movie.imdbID} \r\n                    image={movie.Poster} \r\n                    title={movie.Title}\r\n                    year={movie.Year} \r\n                    type={movie.Type}\r\n                    id={movie.imdbID} \r\n                    />\r\n                ))}\r\n                {this.state.movies.length < this.state.totalresult &&\r\n                <Button\r\n                onClick={() => {\r\n                    this.setState((state) => ({\r\n                        page: state.page + 1\r\n                    }), () => {\r\n                        this.fetchApi(this.state.page)\r\n                        } );\r\n                    }}\r\n                >View more...</Button>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default home;","import React, {Fragment} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h1`\r\n    color: #ffffff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n`;\r\nconst Head = styled.div`\r\n    display: flex;\r\n    padding-top: 30px;\r\n`;\r\nconst Container = styled.div`\r\n    margin-left: 30px;\r\n    margin-top: 30px;\r\n`;\r\nconst TextContainer = styled.div`\r\n    color: #ffffff;\r\n`;\r\nconst Desc = styled.p`\r\n    margin: 10px;\r\n`;\r\n\r\n\r\nclass Posting extends React.Component {\r\n    state = {\r\n        movie: null,\r\n        error: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchApi(this.props.match.params.id)\r\n    }\r\n\r\n    fetchApi = (text) => {\r\n        fetch(`http://www.omdbapi.com/?i=${text}&apikey=97f679b2`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.Response === \"True\") {\r\n                this.setState({movie: res})\r\n            }else {\r\n                this.setState({error: res.Error})\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        //destructuring\r\n        const {movie, error} = this.state;\r\n\r\n        return(\r\n            <Fragment>\r\n                { movie !== null && (\r\n                <Container>\r\n                    <Head>\r\n                        <img \r\n                        src={movie.Poster}\r\n                        alt=\"Poster\" \r\n                        />\r\n                        <Title>{movie.Title}</Title>\r\n                    </Head>\r\n                    <TextContainer>\r\n                        <Desc>{`Year : ${movie.Year}`}</Desc>\r\n                        <Desc>{`Released : ${movie.Released}`}</Desc>\r\n                        <Desc>{`Runtime : ${movie.Runtime}`}</Desc>\r\n                        <Desc>{`Genre : ${movie.Genre}`}</Desc>\r\n                        <Desc>{`Director : ${movie.Director}`}</Desc>\r\n                        <Desc>{`Writer : ${movie.Writer}`}</Desc>\r\n                        <Desc>{`Actors : ${movie.Actors}`}</Desc>\r\n                        <Desc>{`Language : ${movie.Language}`}</Desc>\r\n                        <Desc>{`Country : ${movie.Country}`}</Desc>\r\n                        <Desc>{`DVD : ${movie.DVD}`}</Desc>\r\n                        <Desc>{`Production : ${movie.Production}`}</Desc>\r\n                        <Desc>{`BoxOffice : ${movie.BoxOffice}`}</Desc>\r\n                        <Desc>{`Plot : ${movie.Plot}`}</Desc>\r\n                    </TextContainer>\r\n                    \r\n\r\n                </Container>\r\n                )}\r\n                {error !== null && error }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Posting;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CardPost from '../Components/CardPost';\r\n\r\nconst Text = styled.p`\r\n    font-size: 1.5em;\r\n    text-align: center;\r\n    color: #20232a;\r\n`;\r\nconst Button = styled.button`\r\n    background: #62dafb;\r\n    border: none;\r\n    font-weight: bold;\r\n    color: #20232a;\r\n    width: 100%;\r\n    padding: 0;\r\n    height: 25px;\r\n`;\r\n\r\nclass Search extends React.Component {\r\n    state = {\r\n            movies: [],\r\n            loading: false,\r\n            error: null,\r\n            page: 1,\r\n            totalresult: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchApi(this.props.match.params.keyword)\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.match.params.keyword !== prevProps.match.params.keyword) {\r\n            this.setState({movies: []}, () => {\r\n                this.fetchApi(this.props.match.params.keyword)\r\n            })\r\n        }\r\n    }\r\n\r\n    fetchApi = (text, page = 1) => {\r\n        fetch(`http://www.omdbapi.com/?s=${text}&page=${page}&apikey=97f679b2`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.Response === \"True\") {\r\n                    this.setState({movies: this.state.movies.concat(res.Search), error: null,totalresult: res.totalResults})\r\n                }else {\r\n                    this.setState({error: res.Error})\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.error === null ? this.state.movies.map((movie) => (\r\n                    <CardPost \r\n                    key={movie.imdbID} \r\n                    image={movie.Poster} \r\n                    title={movie.Title}\r\n                    year={movie.Year} \r\n                    type={movie.Type}\r\n                    id={movie.imdbID} \r\n                    />\r\n                )) : <Text >{this.state.error}</Text>}\r\n                { this.state.movies.length < this.state.totalresult &&\r\n                    <Button \r\n                    onClick={() => {\r\n                    this.setState((state) => ({\r\n                        page: state.page + 1\r\n                    }), () => {\r\n                        this.fetchApi(this.props.match.params.keyword, this.state.page)\r\n                        } )\r\n                    } }\r\n                    >View more...</Button>                        \r\n                        }\r\n                                   \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n// import './header.css';\r\n\r\nconst StyledHeader = styled.div`\r\n    background-color: #20232a;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    position: fixed;\r\n    z-index: 999999999;\r\n    top: 0;\r\n    box-shadow: 3px 3px 6px #ffffff ;\r\n`;\r\nconst BrandNname = styled.div`\r\n    font-weight: bold;\r\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\r\n    color: #62dafb;\r\n    font-size: 30px;\r\n`;\r\nconst ContainerSearch = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst StyledInput = styled.input`\r\n    border-radius: 12px;\r\n    margin-right: 10px;\r\n`;\r\nconst Icon = styled.i`\r\n    color: #ffffff;\r\n`;\r\nconst StyledButton = styled.button`\r\n    background: none;\r\n    border: none;\r\n`;\r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: #62dafb;\r\n`;\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        input: \"\"\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.props.history.push(`/search/${this.state.input}`)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <StyledHeader>\r\n                <BrandNname><StyledLink to=\"/\">MovieKita</StyledLink></BrandNname>\r\n                <ContainerSearch>\r\n                    <StyledInput \r\n                        type=\"text\" \r\n                        placeholder=\"  Cari Judul Film\" \r\n                        onInput={(event) => this.setState({input: event.target.value})}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter'){\r\n                                this.onSearch()\r\n                            }\r\n                        }}\r\n                     />\r\n                    <StyledButton onClick={() => this.onSearch()} >\r\n                        <Icon className=\"fa fa-search\"></Icon>\r\n                    </StyledButton>\r\n                </ContainerSearch>\r\n            </StyledHeader>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport styled from 'styled-components';\nimport Home from \"./Home\";\nimport Posting from './Container/Posting';\nimport Search from './Container/Search';\nimport Header from './Components/header';\n\nconst ForMargin = styled.div`\n    margin-top: 80px;\n`;\n\nconst AppRoute = () => {\n    return (\n      <Router> \n          <Header />\n          <ForMargin></ForMargin>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/posting/:id\" component={Posting} />\n          <Route path=\"/search/:keyword\" component={Search} />\n      </Router>\n    );\n  }\n  \n\nReactDOM.render(<AppRoute />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}